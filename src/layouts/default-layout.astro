---
import "$lib/styles/app.css";

import { Toaster } from "$lib/components/ui/sonner";

import { ViewTransitions } from "astro:transitions";

import LoadingIndicator from "astro-loading-indicator/component";
import * as devalue from "devalue";

interface Props {
  class?: string;
}

const { class: classList } = Astro.props;

const { login, session } = Astro.locals;
const data = await session?.drive.fetchData();
---

<html lang="en" transition:animate="slide">
  <head>
    <ViewTransitions fallback="swap" />
    <LoadingIndicator color="unset" height="4px" threshold={false} />

    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <Toaster client:only="svelte" richColors />
    <div class:list={["container lg:w-3/4 md:min-h-[100vh]", classList]}>
      <slot />
    </div>
    <div
      id="state-data"
      data-value={devalue.stringify(data)}
      data-login={login}
    >
    </div>
  </body>
</html>

<script>
  import type { GoogleDriveData } from "$lib/google-drive";
  import { state, updateGoogleDriveData } from "$lib/stores";

  import * as devalue from "devalue";
  import { get } from "svelte/store";

  document.addEventListener("astro:page-load", async () => {
    const dataElement = document.querySelector("#state-data");
    if (!(dataElement instanceof HTMLElement)) return;

    const { login, value: data } = dataElement.dataset;
    sessionStorage.setItem("login", login!);

    if (login === "google") {
      const local = get(state);
      const remote: GoogleDriveData | undefined = devalue.parse(data!);

      if (remote === undefined || remote.last_update < local.last_update) {
        console.log("[sync] local >> google-drive");
        await updateGoogleDriveData();
      } else if (remote.last_update > local.last_update) {
        console.log("[sync] google-drive >> local");
        state.set(remote);
      }
    }
  });
</script>

<style is:global>
  .astro-loading-indicator {
    background: linear-gradient(
      270deg,
      theme("colors.indigo.400") 25%,
      theme("colors.indigo.800") 50%,
      theme("colors.indigo.600") 25%
    );
  }
</style>
