---
import "$lib/styles/app.css";

import AnalyticsUmami from "$lib/components/analytics-umami.astro";
import AppBreadcrumb from "$lib/components/app-breadcrumb.astro";
import AppFooter from "$lib/components/app-footer.svelte";
import { Toaster } from "$lib/components/ui/sonner";
import type { BreadcrumbItem } from "$lib/types";

import LoadingIndicator from "astro-loading-indicator/component";
import { ViewTransitions } from "astro:transitions";

import { pwaInfo } from "virtual:pwa-info";

export interface Props {
  class?: string;
  title: string;
  breadcrumbs: BreadcrumbItem[];
}

const { class: classList, title, breadcrumbs } = Astro.props;
---

<html lang="en" transition:animate="slide">
  <head>
    <ViewTransitions fallback="swap" />
    <LoadingIndicator color="unset" height="4px" threshold={false} />

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="minor-motion" />
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

    <title>
      {`${title} @ ${import.meta.env._GITHUB_URL.split("/").at(-1)}`}
    </title>
    <meta name="description" content={title} />

    <AnalyticsUmami />
  </head>
  <body>
    <div
      class="container flex min-h-[100vh] flex-col justify-center py-8 lg:w-3/4"
    >
      <AppBreadcrumb {breadcrumbs} />

      <main class:list={["flex-1", classList]}>
        <slot />
      </main>

      <AppFooter client:load />
    </div>

    <Toaster client:only="svelte" richColors />
  </body>
</html>

<script src="./pwa.ts"></script>
<script src="./sync.ts"></script>

<style is:global>
  .astro-loading-indicator {
    background: linear-gradient(
      270deg,
      theme("colors.indigo.400") 25%,
      theme("colors.indigo.800") 50%,
      theme("colors.indigo.600") 25%
    );
  }
</style>
