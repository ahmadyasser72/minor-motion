---
import "$lib/styles/app.css";

import { Toaster } from "$lib/components/ui/sonner";
import { fetchCompletedTasks } from "$lib/google-drive";
import type { TaskId } from "$lib/types";

import { ViewTransitions } from "astro:transitions";

import LoadingIndicator from "astro-loading-indicator/component";

interface Props {
  class?: string;
}

const { class: classList } = Astro.props;

const { login, session } = Astro.locals;
let completed: TaskId[] = [];
if (session !== undefined) {
  completed = await fetchCompletedTasks(session?.token);
}
---

<html lang="en" transition:animate="slide">
  <head>
    <ViewTransitions fallback="swap" />
    <LoadingIndicator color="unset" height="4px" threshold={false} />

    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <Toaster client:only="svelte" richColors />
    <div class:list={["container lg:w-3/4 md:min-h-[100vh]", classList]}>
      <slot />
    </div>
    <div
      id="tasks-data"
      data-value={JSON.stringify(completed)}
      data-login={login}
    >
    </div>
  </body>
</html>

<script>
  import type { TaskId } from "$lib/types";

  const dataElement = document.querySelector("#tasks-data") as HTMLElement;
  if (dataElement.dataset.login === "google") {
    const googleDriveData: TaskId[] = JSON.parse(dataElement.dataset.value!);
    if (googleDriveData.length > 0)
      localStorage.setItem("completed-tasks", JSON.stringify(googleDriveData));
    else {
      const { syncDataToGoogleDrive } = await import("$lib/stores");
      await syncDataToGoogleDrive();
    }
  }
</script>

<style is:global>
  .astro-loading-indicator {
    background: linear-gradient(
      270deg,
      theme("colors.indigo.400") 25%,
      theme("colors.indigo.800") 50%,
      theme("colors.indigo.600") 25%
    );
  }
</style>
