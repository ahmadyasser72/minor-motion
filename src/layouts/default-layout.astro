---
import "$lib/styles/app.css";

import { pwaInfo } from "virtual:pwa-info";

import AnalyticsUmami from "$lib/components/analytics-umami.astro";
import AppBreadcrumb from "$lib/components/app-breadcrumb.astro";
import AppData from "$lib/components/app-data.astro";
import AppFooter from "$lib/components/app-footer.svelte";

import { Toaster } from "$lib/components/ui/sonner";
import type { BreadcrumbItem } from "$lib/types";

import { ViewTransitions } from "astro:transitions";

import LoadingIndicator from "astro-loading-indicator/component";

export interface Props {
  class?: string;
  title: string;
  breadcrumbs: BreadcrumbItem[];
}

const { class: classList, title, breadcrumbs } = Astro.props;

const loadingImages = Object.values(
  import.meta.glob<{ default: ImageMetadata }>("../assets/loading-*.gif", {
    eager: true,
  })
);
const loadingImage =
  loadingImages[Math.floor(Math.random() * loadingImages.length)]!.default;
---

<html lang="en" transition:animate="slide">
  <head>
    <ViewTransitions fallback="swap" />
    <LoadingIndicator color="unset" height="4px" threshold={false} />

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="shortcut icon" href="/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="minor-motion" />
    {pwaInfo && <Fragment set:html={pwaInfo.webManifest.linkTag} />}

    <title>{`${title} @ ${Astro.url.hostname}`}</title>
    <meta name="description" content={title} />

    <link rel="preload" as="image" href={loadingImage.src} />

    <AnalyticsUmami />
  </head>
  <body>
    <div
      class="flex flex-col justify-center container lg:w-3/4 min-h-[100vh] py-8"
    >
      <AppBreadcrumb {breadcrumbs} />

      <main id="content" class:list={["flex-1 hidden", classList]}>
        <slot />
      </main>

      <div id="loading" class="flex items-center flex-1 self-center">
        <img
          class="object-cover max-h-[450px]"
          alt="loading..."
          src={loadingImage.src}
          style={{ height: Math.max(loadingImage.height, 450) + "px" }}
        />
      </div>

      <AppFooter client:load />
    </div>

    <Toaster client:only="svelte" richColors />
    <AppData />
  </body>
</html>

<script is:inline>
  document.addEventListener("astro:before-preparation", () => {
    document.querySelector("#loading").classList.remove("hidden");
    document.querySelector("main#content").classList.add("hidden");
  });
  document.addEventListener("astro:page-load", () => {
    document.querySelector("#loading").classList.add("hidden");
    document.querySelector("main#content").classList.remove("hidden");
  });
</script>

<script>
  import { registerSW } from "virtual:pwa-register";

  registerSW({
    immediate: true,
    onRegisteredSW(swScriptUrl) {
      console.log("SW registered: ", swScriptUrl);
    },
    onOfflineReady() {
      console.log("PWA application ready to work offline");
    },
  });
</script>

<style is:global>
  .astro-loading-indicator {
    background: linear-gradient(
      270deg,
      theme("colors.indigo.400") 25%,
      theme("colors.indigo.800") 50%,
      theme("colors.indigo.600") 25%
    );
  }
</style>
