---
import GridCardJadwal from "$lib/components/grid-card-jadwal.svelte";
import DefaultLayout from "$lib/layouts/default-layout.astro";
import type { MapListTugasLewat, MapListJadwal } from "$lib/types";
import { dayNames } from "$lib/utils.date";
import { getMataKuliah } from "$lib/utils.content";

import { getCollection } from "astro:content";

const dailyJadwalMap = Object.fromEntries(
  dayNames.map((hari) => [hari, []])
) as MapListJadwal;

const allMataKuliah = await getMataKuliah();
for (const { data, id } of allMataKuliah) {
  dailyJadwalMap[data.hari].push({ ...data, id });
}

for (const [key, value] of Object.entries(dailyJadwalMap)) {
  if (value.length === 0) {
    delete dailyJadwalMap[key];
    continue;
  }

  dailyJadwalMap[key] = value.sort(
    ({ start: a }, { start: b }) => a.hour - b.hour || a.minute - b.minute
  );
}

const allStatusTugasMap: MapListTugasLewat = Object.fromEntries(
  allMataKuliah.map(({ id }) => [id, []])
);

const allTugas = await getCollection("tugas");
for (const { data, slug } of allTugas) {
  const mataKuliah = data["mata-kuliah"].id;
  allStatusTugasMap[mataKuliah]?.push([slug, data["batas-waktu"] < new Date()]);
}
---

<DefaultLayout title="Daftar Jadwal Harian" breadcrumbs={[{ label: "jadwal" }]}>
  <GridCardJadwal client:load {dailyJadwalMap} {allStatusTugasMap} />
</DefaultLayout>
